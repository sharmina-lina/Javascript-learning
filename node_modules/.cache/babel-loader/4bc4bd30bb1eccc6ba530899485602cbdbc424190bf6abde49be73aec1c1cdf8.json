{"ast":null,"code":"// Yelp API https://www.yelp.com/developers/v3/manage_app?app_created=True\n// Yelp ClientID: iJwixUBN4GUMrcm6TF4e4g\n// Yelp Secret: ayM8TSldvchnTG7xJles311Ytmyzn2iZG0AkuWClDDgJazYugY6UxJms16HowjV6\nconst clientId = 'iJwixUBN4GUMrcm6TF4e4g';\nconst secret = 'ayM8TSldvchnTG7xJles311Ytmyzn2iZG0AkuWClDDgJazYugY6UxJms16HowjV6';\nlet accessToken;\nconst Yelp = {\n  getAccessToken: function () {\n    if (accessToken) {\n      return new Promise(resolve => resolve(accessToken));\n    }\n    // We will make a request to the /token endpoint of the Yelp API and pass\n    // in our client ID and secret to obtain our access token.\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/oauth2/token?grant_type=client_credentials&client_id=${clientId}&client_secret=${secret}`, {\n      method: 'POST'\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      accessToken = jsonResponse.access_token;\n    });\n  },\n  search: function (term, location, sortBy) {\n    return Yelp.getAccessToken().then(() => {\n      // To retrieve businesses, you'll have to hit the /businesses endpoint of the Yelp API.\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(response => {\n        return response.json();\n      }).then(jsonResponse => {\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map(business => {\n            // id\n            // imageSrc\n            // name\n            // address\n            // city\n            // state\n            // zipCode\n            // category\n            // rating\n            // reviewCount\n            console.log(business);\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zip_code,\n              category: business.categories[0].title,\n              rating: business.rating,\n              reviewCount: business.review_count\n            };\n          });\n        }\n      });\n    });\n  }\n};\nexport default Yelp;","map":{"version":3,"names":["clientId","secret","accessToken","Yelp","getAccessToken","Promise","resolve","fetch","method","then","response","json","jsonResponse","access_token","search","term","location","sortBy","headers","Authorization","businesses","map","business","console","log","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count"],"sources":["D:/Codeacademy_project/ravenous/src/components/util/Yelp.js"],"sourcesContent":["// Yelp API https://www.yelp.com/developers/v3/manage_app?app_created=True\r\n// Yelp ClientID: iJwixUBN4GUMrcm6TF4e4g\r\n// Yelp Secret: ayM8TSldvchnTG7xJles311Ytmyzn2iZG0AkuWClDDgJazYugY6UxJms16HowjV6\r\nconst clientId = 'iJwixUBN4GUMrcm6TF4e4g';\r\nconst secret = 'ayM8TSldvchnTG7xJles311Ytmyzn2iZG0AkuWClDDgJazYugY6UxJms16HowjV6';\r\nlet accessToken;\r\n\r\nconst Yelp = {\r\n  getAccessToken: function() {\r\n    if (accessToken) {\r\n      return new Promise(resolve => resolve(accessToken));\r\n    }\r\n    // We will make a request to the /token endpoint of the Yelp API and pass\r\n    // in our client ID and secret to obtain our access token.\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/oauth2/token?grant_type=client_credentials&client_id=${clientId}&client_secret=${secret}`, {\r\n      method: 'POST'\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      accessToken = jsonResponse.access_token;\r\n    });\r\n  },\r\n  search: function(term, location, sortBy) {\r\n    return Yelp.getAccessToken().then(() => {\r\n      // To retrieve businesses, you'll have to hit the /businesses endpoint of the Yelp API.\r\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n        headers: { Authorization: `Bearer ${accessToken}` }\r\n      }).then(response => {\r\n        return response.json();\r\n      }).then(jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => {\r\n            // id\r\n            // imageSrc\r\n            // name\r\n            // address\r\n            // city\r\n            // state\r\n            // zipCode\r\n            // category\r\n            // rating\r\n            // reviewCount\r\n            console.log(business);\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,wBAAwB;AACzC,MAAMC,MAAM,GAAG,kEAAkE;AACjF,IAAIC,WAAW;AAEf,MAAMC,IAAI,GAAG;EACXC,cAAc,EAAE,YAAW;IACzB,IAAIF,WAAW,EAAE;MACf,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACJ,WAAW,CAAC,CAAC;IACrD;IACA;IACA;IACA,OAAOK,KAAK,CAAE,iHAAgHP,QAAS,kBAAiBC,MAAO,EAAC,EAAE;MAChKO,MAAM,EAAE;IACV,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACF,IAAI,CAACG,YAAY,IAAI;MACtBV,WAAW,GAAGU,YAAY,CAACC,YAAY;IACzC,CAAC,CAAC;EACJ,CAAC;EACDC,MAAM,EAAE,UAASC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACvC,OAAOd,IAAI,CAACC,cAAc,EAAE,CAACK,IAAI,CAAC,MAAM;MACtC;MACA,OAAOF,KAAK,CAAE,sFAAqFQ,IAAK,aAAYC,QAAS,YAAWC,MAAO,EAAC,EAAE;QAChJC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASjB,WAAY;QAAE;MACpD,CAAC,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAI;QAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;MACxB,CAAC,CAAC,CAACF,IAAI,CAACG,YAAY,IAAI;QACtB,IAAIA,YAAY,CAACQ,UAAU,EAAE;UAC3B,OAAOR,YAAY,CAACQ,UAAU,CAACC,GAAG,CAACC,QAAQ,IAAI;YAC7C;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;YACrB,OAAO;cACLG,EAAE,EAAEH,QAAQ,CAACG,EAAE;cACfC,QAAQ,EAAEJ,QAAQ,CAACK,SAAS;cAC5BC,IAAI,EAAEN,QAAQ,CAACM,IAAI;cACnBC,OAAO,EAAEP,QAAQ,CAACN,QAAQ,CAACc,QAAQ;cACnCC,IAAI,EAAET,QAAQ,CAACN,QAAQ,CAACe,IAAI;cAC5BC,KAAK,EAAEV,QAAQ,CAACN,QAAQ,CAACgB,KAAK;cAC9BC,OAAO,EAAEX,QAAQ,CAACN,QAAQ,CAACkB,QAAQ;cACnCC,QAAQ,EAAEb,QAAQ,CAACc,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;cACtCC,MAAM,EAAEhB,QAAQ,CAACgB,MAAM;cACvBC,WAAW,EAAEjB,QAAQ,CAACkB;YACxB,CAAC;UACH,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAerC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}